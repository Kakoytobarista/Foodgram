version: '3.3'
services:

  db:
    image: postgres:13.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env

  web:
    image: heyaslan/foodgram:v1.1.3
    restart: always
    volumes:
      - static_value:/code/static/
      - media_value:/code/media/
    depends_on:
      - db
    env_file:
      - ./.env

  frontend:
    image: heyaslan/foodgram_front:v1.1.3.
    volumes:
      - ./frontend/:/app/result_build/

  nginx:
    image: nginx:1.19.3
    ports:
      - 80:80
      - 443:443
    restart: always
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./frontend/build:/usr/share/nginx/html/
      - ./docs/redoc.html:/usr/share/nginx/html/api/docs/redoc.html
      - ./docs/openapi-schema.yml:/usr/share/nginx/html/api/docs/openapi-schema.yml
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
      - static_value:/var/html/static/
      - media_value:/var/html/media/
    depends_on:
      - web
      - db
      - frontend

  certbot:
    image: certbot/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot


volumes:
  postgres_data:
  static_value:
  media_value: