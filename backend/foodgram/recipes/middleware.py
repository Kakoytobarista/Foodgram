from django.http import JsonResponse
from django.http.request import HttpRequest
from django.http.response import HttpResponse, JsonResponse as DjangoJsonResponse

class TransactionError:
    """
    Middleware to handle exceptions and return a JSON response with error details.

    Attributes:
    - get_response (callable): The next middleware or view function in the chain.
    """

    def __init__(self, get_response: callable):
        """
        Initialize the middleware.

        Parameters:
        - get_response (callable): The next middleware or view function in the chain.
        """
        self._get_response = get_response

    def __call__(self, request: HttpRequest) -> HttpResponse:
        """
        Process the request.

        Parameters:
        - request (HttpRequest): The incoming request.

        Returns:
        - HttpResponse: The response generated by the next middleware or view function.
        """
        return self._get_response(request)

    def process_exception(self, request: HttpRequest, exception: Exception) -> DjangoJsonResponse:
        """
        Process an exception and return a JSON response with error details.

        Parameters:
        - request (HttpRequest): The incoming request.
        - exception (Exception): The exception that occurred.

        Returns:
        - JsonResponse: A JSON response with error details.
        """
        return JsonResponse({
            "success": False,
            "error": str(exception),
        })
